[{"C:\\Users\\Admin\\MovieTips\\src\\index.js":"1","C:\\Users\\Admin\\MovieTips\\src\\components\\Header\\Header.js":"2","C:\\Users\\Admin\\MovieTips\\src\\components\\mainNav.js":"3","C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\Movies\\Movies.js":"4","C:\\Users\\Admin\\MovieTips\\src\\hooks\\useGenre.js":"5","C:\\Users\\Admin\\MovieTips\\src\\components\\Genres\\Genres.js":"6","C:\\Users\\Admin\\MovieTips\\src\\components\\Modal\\TransistionModal.js":"7","C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\details\\Details.js":"8","C:\\Users\\Admin\\MovieTips\\src\\components\\Singlecontent.js":"9","C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\Trending\\Trending.js":"10","C:\\Users\\Admin\\MovieTips\\src\\App.js":"11","C:\\Users\\Admin\\MovieTips\\src\\reportWebVitals.js":"12","C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\TVseries\\TVseries.js":"13","C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\search.js":"14","C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\pagination\\CustomPagination.js":"15","C:\\Users\\Admin\\MovieTips\\src\\config\\config.js":"16"},{"size":476,"mtime":1636172104959,"results":"17","hashOfConfig":"18"},{"size":454,"mtime":1636376495700,"results":"19","hashOfConfig":"18"},{"size":1855,"mtime":1640358702521,"results":"20","hashOfConfig":"18"},{"size":2511,"mtime":1636172104927,"results":"21","hashOfConfig":"18"},{"size":219,"mtime":1636172104948,"results":"22","hashOfConfig":"18"},{"size":1930,"mtime":1636172104917,"results":"23","hashOfConfig":"18"},{"size":1703,"mtime":1636172104921,"results":"24","hashOfConfig":"18"},{"size":167974,"mtime":1640369017240,"results":"25","hashOfConfig":"18"},{"size":1103,"mtime":1640369032887,"results":"26","hashOfConfig":"18"},{"size":1744,"mtime":1636187060162,"results":"27","hashOfConfig":"18"},{"size":1257,"mtime":1640361434067,"results":"28","hashOfConfig":"18"},{"size":375,"mtime":1636172104961,"results":"29","hashOfConfig":"18"},{"size":2468,"mtime":1636172104928,"results":"30","hashOfConfig":"18"},{"size":5414,"mtime":1640369167459,"results":"31","hashOfConfig":"18"},{"size":948,"mtime":1636172104933,"results":"32","hashOfConfig":"18"},{"size":517,"mtime":1636172104940,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"2d0cgo",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Admin\\MovieTips\\src\\index.js",[],["70","71"],"C:\\Users\\Admin\\MovieTips\\src\\components\\Header\\Header.js",[],"C:\\Users\\Admin\\MovieTips\\src\\components\\mainNav.js",[],"C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\Movies\\Movies.js",[],"C:\\Users\\Admin\\MovieTips\\src\\hooks\\useGenre.js",[],"C:\\Users\\Admin\\MovieTips\\src\\components\\Genres\\Genres.js",[],["72","73"],"C:\\Users\\Admin\\MovieTips\\src\\components\\Modal\\TransistionModal.js",[],"C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\details\\Details.js",[],"C:\\Users\\Admin\\MovieTips\\src\\components\\Singlecontent.js",[],"C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\Trending\\Trending.js",[],"C:\\Users\\Admin\\MovieTips\\src\\App.js",[],"C:\\Users\\Admin\\MovieTips\\src\\reportWebVitals.js",[],["74","75"],"C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\TVseries\\TVseries.js",[],"C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\search.js",["76"],"import {React, useEffect, useState} from 'react'\r\nimport Singlecontent from '../Singlecontent';\r\nimport './Trending/Trending.css'\r\nimport  './search/SearchContent.css'\r\nimport CustomPagination from'./pagination/CustomPagination'\r\n\r\nimport {useHistory} from 'react-router-dom'\r\nimport '../Singlecontent.css'\r\nimport {\r\n    Button,\r\n    createMuiTheme,\r\n    Tab,\r\n    Tabs,\r\n    TextField,\r\n    ThemeProvider,\r\n  } from \"@material-ui/core\";\r\n\r\nimport SearchIcon from '@material-ui/icons/Search'  \r\n\r\nimport axios from 'axios';\r\n\r\n\r\nconst Search=()=>{\r\n\r\n    const [type,Settype]=useState(0);\r\n    const [page,Setpage]=useState(0);\r\n    const [content,Setcontent]=useState([]);\r\n    const[numofpages,Setnumofpages]=useState(0);\r\n    const [searchText,SetsearchText]=useState(\"\");\r\n    const history=useHistory();\r\n    const darkTheme=createMuiTheme({\r\n        palette:{\r\n            type:\"dark\",\r\n            primary:{\r\n              main:\"#0D94FB\"\r\n            }\r\n        }\r\n    })\r\n    \r\n   \r\n   const fetchsearch=async ()=>{\r\n    window.scroll(0,0);\r\n      console.log(searchText);\r\n      if(searchText!==\"\"){\r\n        const data=await axios.get(`https://api.themoviedb.org/3/search/${type ? \"tv\":\"movie\"}?api_key=05c0fa57ae6df2b65e5b13ecbbb3630b&language=en-US&page=1&query=${searchText}&include_adult=false\r\n        `);\r\n        //${type ? \"tv\":\"movie\"}\r\n        console.log(type);\r\n        Setcontent(data.data.results);\r\n        Setnumofpages(data.data.total_pages);\r\n        console.log(data.data.results);\r\n      }\r\n     \r\n}\r\nuseEffect(()=>{\r\n    if(searchText.length>0){\r\n        fetchsearch();\r\n    }\r\n    \r\n},[searchText]);\r\n    useEffect(()=>{\r\n        fetchsearch();\r\n        console.log(type);\r\n        // eslint-disable-next-line\r\n    },[page,type])\r\n\r\n    const media_type=type ? \"tv\":\"Movie\";\r\n\r\n    const showdetail=(id,mediatype)=>{\r\n        // /details/${id}/${genre}\r\n        history.push(`/details/${id}/${mediatype}`)\r\n    }\r\n    \r\n\r\n    return(\r\n      <div> \r\n        <div>\r\n           <ThemeProvider theme={darkTheme}>\r\n               <div className=\"Search\">\r\n                   <TextField\r\n                   style={{flex:1 ,color:\"#0D94FB\",width:\"90%\"}}\r\n                   variant=\"filled\"\r\n                   label=\"Search for your favourite\"\r\n                   className=\"Searchbox\"\r\n                   onChange={(e)=>SetsearchText(e.target.value)}\r\n                   ></TextField>\r\n                   <Button variant=\"contained\" style={{backgroundColor:\"transparent\",\r\n                    color:\"#0D94FB\"}} onClick={()=>{fetchsearch()}}>\r\n                      <SearchIcon fontSize=\"large\" />\r\n                   </Button>\r\n               </div>\r\n               {\r\n                   searchText.length>0 && <div className=\"Autossearchdiv\">\r\n                   {(content!==\"\"&&searchText!==\"\") && content.length>8 ? content.slice(0, 8).map((c)=>(\r\n                   <div className=\"Autosearchbox\" key={c.id} onClick={()=>showdetail(c.id,type?\"tv\":\"movie\")}>\r\n                          {type? (<p>{c.title||c.name}</p>):(<p>{c.title }</p>)}\r\n                          </div>))\r\n                          \r\n                          :content.map((c)=>{\r\n                              console.log(c.name);\r\n                            return(\r\n                            <div className=\"Autosearchbox\" key={c.id}>\r\n                             {\r\n                                  \r\n                                    (searchText.length>0) &&\r\n                                     type? (<p>{c.title||c.name}</p>):(<p>{c.title }</p>)   \r\n                                }\r\n                                 \r\n                         </div>\r\n                        )})\r\n                          }\r\n                  </div>\r\n               }\r\n              \r\n               <Tabs\r\n               value={type}\r\n               indicatorColor=\"primary\"\r\n               textColor=\"primary\"\r\n               onChange={(event,newvalue)=>{\r\n                   Settype(newvalue);\r\n                   Setpage(1);\r\n               }}\r\n               style={{ paddingBottom: 5,margin:\"50px\" }}\r\n               >\r\n\r\n                  <Tab style={{width:\"100%\"}} label=\"Search Movies\"></Tab> \r\n                  <Tab style={{width:\"100%\"}} label=\"Search TVseries\"></Tab>\r\n               </Tabs>\r\n           </ThemeProvider>\r\n        </div>\r\n         \r\n          <div className=\"trending\">\r\n          {\r\n              content ? content.map((c)=>(\r\n                  \r\n                  <Singlecontent\r\n                  key={c.id}\r\n                  id={c.id}\r\n                  title={c.title||c.name}\r\n                  poster={c.poster_path}\r\n                  date={c.release_date||c.first_air_date}\r\n                  language={c.original_language}\r\n                  media_type={media_type}\r\n                  rating={c.vote_average}\r\n                  liked={Math.floor(c.popularity)}\r\n                  vote_average={c.vote_average}\r\n                  ></Singlecontent>\r\n                \r\n              )):\r\n                  <h1>Nothing found</h1>\r\n              \r\n              \r\n          }\r\n      </div>\r\n\r\n      {searchText && !content &&\r\n      (type ? <h2>No Series Found </h2> : <h2>No Movies Found</h2>)\r\n      }\r\n     \r\n      {numofpages>1 && (\r\n         <CustomPagination setpage={Setpage} numofpages={numofpages}/>\r\n      )} \r\n\r\n      </div> \r\n    );\r\n}\r\n\r\nexport default Search;","C:\\Users\\Admin\\MovieTips\\src\\components\\pages\\pagination\\CustomPagination.js",[],"C:\\Users\\Admin\\MovieTips\\src\\config\\config.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"77","replacedBy":"83"},{"ruleId":"79","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":60,"column":3,"nodeType":"87","endLine":60,"endColumn":15,"suggestions":"88"},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],["89"],["90"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchsearch'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-global-assign","no-unsafe-negation",{"desc":"92","fix":"93"},"Update the dependencies array to be: [fetchsearch, searchText]",{"range":"94","text":"95"},[1618,1630],"[fetchsearch, searchText]"]